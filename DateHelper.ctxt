#BlueJ class context
comment0.params=date\ time
comment0.target=java.util.Date\ stringToData(java.lang.String,\ java.lang.String)
comment1.params=
comment1.target=java.util.Date\ getNow()
comment1.text=\ M\u00E9todo\ que\ retorna\ a\ data\ atual\r\n\ \r\n\ @return\ String\ nowDate;\ \r\n
comment2.params=date
comment2.target=boolean\ compareDate(java.util.Date)
comment2.text=\ M\u00E9todo\ que\ compara\ a\ data\ atual\ com\ a\ data\ do\ par\u00E2metro\r\n\ \r\n\ @param\ date\ Data\ a\ ser\ comparada\ com\ a\ atual\r\n\ @return\ (true)\ se\ a\ data\ atual\ \u00E9\ menor\ que\ a\ data\ comparada\ (false)\ se\ a\ data\ atual\ \u00E9\ maior\ que\ a\ data\ comparada\r\n
comment3.params=date\ seconDate
comment3.target=boolean\ compareDay(java.util.Date,\ java.util.Date)
comment3.text=\ M\u00E9todo\ que\ compara\ o\ dia\ de\ duas\ datas\r\n\ \r\n\ @param\ date\ Date\ a\ ser\ comparada\ com\ seconDate\r\n\ @param\ seconDate\ Date\ a\ ser\ comparada\ com\ date\r\n\ @return\ (true)\ se\ a\ 1\u00AA\ data\ \u00E9\ igual\ que\ a\ 2\u00AA\ data\ comparada\ (false)\ se\ a\ 1\u00AA\ data\ \u00E9\ diferente\ que\ a\ 2\u00AA\ data\ comparada\r\n
comment4.params=date\ minutes
comment4.target=java.util.Date\ addMinutes(java.util.Date,\ int)
comment4.text=\ M\u00E9todo\ que\ adiciona\ minutos\ \u00E0\ data\ passada\ como\ par\u00E2metro\r\n\ \r\n\ @param\ date\ Data\ em\ que\ ser\u00E1\ adicionado\ minutos\r\n\ @param\ minutes\ Quantidade\ de\ minutos\ que\ ser\u00E1\ adicionado\ \u00E0\ data\r\n\ @return\ Date\ newDate\ \r\n
comment5.params=date
comment5.target=int\ getMinutes(java.util.Date)
comment6.params=begin\ end\ minutes
comment6.target=boolean\ timeFits(java.util.Date,\ java.util.Date,\ int)
comment7.params=date
comment7.target=java.util.Date[]\ comercialTime(java.util.Date)
comment8.params=date\ inicio\ range
comment8.target=boolean\ isInRangeBefore(java.util.Date,\ java.util.Date,\ int)
numComments=9
